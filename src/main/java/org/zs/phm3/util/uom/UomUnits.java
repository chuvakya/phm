package org.zs.phm3.util.uom;

import static systems.uom.common.USCustomary.*;
import static tech.units.indriya.unit.Units.CANDELA;
import static tech.units.indriya.unit.Units.KILOGRAM;
import static tech.units.indriya.unit.Units.METRE;
import static tech.units.indriya.unit.Units.COULOMB;
import static tech.units.indriya.unit.Units.FARAD;
import static tech.units.indriya.unit.Units.SIEMENS;
import static tech.units.indriya.unit.Units.WEBER;
import static tech.units.indriya.unit.Units.TESLA;
import static tech.units.indriya.unit.Units.LUMEN;
import static tech.units.indriya.unit.Units.BECQUEREL;
import static tech.units.indriya.unit.Units.GRAY;
import static tech.units.indriya.unit.Units.SIEVERT;
import static tech.units.indriya.unit.Units.KATAL;
import static tech.units.indriya.unit.Units.METRE_PER_SECOND;
import static tech.units.indriya.unit.Units.METRE_PER_SQUARE_SECOND;
import static tech.units.indriya.unit.Units.SQUARE_METRE;
import static tech.units.indriya.unit.Units.CUBIC_METRE;
import static tech.units.indriya.unit.Units.KILOMETRE_PER_HOUR;
import static tech.units.indriya.unit.Units.MINUTE;
import static tech.units.indriya.unit.Units.HOUR;
import static tech.units.indriya.unit.Units.LITRE;
import static tech.units.indriya.unit.Units.AMPERE;
import static tech.units.indriya.unit.Units.KELVIN;
import static tech.units.indriya.unit.Units.MOLE;
import static tech.units.indriya.unit.Units.SECOND;
import static tech.units.indriya.unit.Units.GRAM;
import static tech.units.indriya.unit.Units.RADIAN;
import static tech.units.indriya.unit.Units.STERADIAN;
import static tech.units.indriya.unit.Units.HERTZ;
import static tech.units.indriya.unit.Units.NEWTON;
import static tech.units.indriya.unit.Units.PASCAL;
import static tech.units.indriya.unit.Units.JOULE;
import static tech.units.indriya.unit.Units.WATT;
import static tech.units.indriya.unit.Units.VOLT;
import static tech.units.indriya.unit.Units.OHM;
import static tech.units.indriya.unit.Units.HENRY;
import static tech.units.indriya.unit.Units.CELSIUS;
import static tech.units.indriya.unit.Units.LUX;
import static tech.units.indriya.unit.Units.PERCENT;
import static tech.units.indriya.unit.Units.DAY;
import static tech.units.indriya.unit.Units.WEEK;
import static tech.units.indriya.unit.Units.YEAR;

import static systems.uom.unicode.CLDR.METER;
import static systems.uom.unicode.CLDR.MILLIMETER;
import static systems.uom.unicode.CLDR.CENTIMETER;
import static systems.uom.unicode.CLDR.KILOMETER;
import static systems.uom.unicode.CLDR.FOOT;
import static systems.uom.unicode.CLDR.FURLONG;
import static systems.uom.unicode.CLDR.YARD;
import static systems.uom.unicode.CLDR.INCH;
import static systems.uom.unicode.CLDR.MILE;
import static systems.uom.unicode.CLDR.ASTRONOMICAL_UNIT;
import static systems.uom.unicode.CLDR.FATHOM;
import static systems.uom.unicode.CLDR.MILE_SCANDINAVIAN;
import static systems.uom.unicode.CLDR.REVOLUTION_ANGLE;
import static systems.uom.unicode.CLDR.PI;
import static systems.uom.unicode.CLDR.INCH_HG;
import static systems.uom.unicode.CLDR.DEGREE;
import static systems.uom.unicode.CLDR.ARC_MINUTE;
import static systems.uom.unicode.CLDR.ARC_SECOND;
import static systems.uom.unicode.CLDR.SQUARE_FOOT;
import static systems.uom.unicode.CLDR.HECTARE;
import static systems.uom.unicode.CLDR.ACRE;
import static systems.uom.unicode.CLDR.SQUARE_INCH;
import static systems.uom.unicode.CLDR.SQUARE_YARD;
import static systems.uom.unicode.CLDR.LITER;
import static systems.uom.unicode.CLDR.CUBIC_METER;
import static systems.uom.unicode.CLDR.CUBIC_INCH;
import static systems.uom.unicode.CLDR.GALLON;
import static systems.uom.unicode.CLDR.GALLON_IMPERIAL;
import static systems.uom.unicode.CLDR.CUBIC_FOOT;
import static systems.uom.unicode.CLDR.POUND;
import static systems.uom.unicode.CLDR.OUNCE;
import static systems.uom.unicode.CLDR.OUNCE_TROY;
import static systems.uom.unicode.CLDR.STONE;
import static systems.uom.unicode.CLDR.G_FORCE;
import static systems.uom.unicode.CLDR.LIGHT_YEAR;
import static systems.uom.unicode.CLDR.NAUTICAL_MILE;
import static systems.uom.unicode.CLDR.KNOT;
import static systems.uom.unicode.CLDR.METER_PER_SECOND;
import static systems.uom.unicode.CLDR.MILE_PER_HOUR;
import static systems.uom.unicode.CLDR.METER_PER_SECOND_SQUARED;
import static systems.uom.unicode.CLDR.CARAT;
import static systems.uom.unicode.CLDR.KARAT;
import static systems.uom.unicode.CLDR.PARSEC;
import static systems.uom.unicode.CLDR.FAHRENHEIT;
import static systems.uom.unicode.CLDR.FOODCALORIE;
import static systems.uom.unicode.CLDR.CALORIE;
import static systems.uom.unicode.CLDR.HORSEPOWER;
import static systems.uom.unicode.CLDR.POUND_PER_SQUARE_INCH;
import static systems.uom.unicode.CLDR.SPHERE;
import static systems.uom.unicode.CLDR.BIT;
import static systems.uom.unicode.CLDR.BYTE;
import static systems.uom.unicode.CLDR.MILLIGRAM_PER_DECILITER;
import static systems.uom.unicode.CLDR.LITER_PER_100KILOMETERS;
import static systems.uom.unicode.CLDR.LITER_PER_KILOMETER;
import static systems.uom.unicode.CLDR.MILE_PER_GALLON;
import static systems.uom.unicode.CLDR.CUBIC_MILE;
import static systems.uom.unicode.CLDR.CUBIC_YARD;
import static systems.uom.unicode.CLDR.BUSHEL;
import static systems.uom.unicode.CLDR.CUP_METRIC;
import static systems.uom.unicode.CLDR.PINT_METRIC;
import static systems.uom.unicode.CLDR.QUART;
import static systems.uom.unicode.CLDR.MONTH;
import static systems.uom.unicode.CLDR.CENTURY;
import static systems.uom.unicode.CLDR.TONNE;

import static si.uom.NonSI.DALTON;
import static si.uom.NonSI.ATOM;
import static si.uom.NonSI.ANGSTROM;
import static si.uom.NonSI.BOHR_RADIUS;
import static si.uom.NonSI.BARN;
import static si.uom.NonSI.DAY_SIDEREAL;
import static si.uom.NonSI.YEAR_CALENDAR;
import static si.uom.NonSI.YEAR_SIDEREAL;
import static si.uom.NonSI.YEAR_JULIEN;
import static si.uom.NonSI.ATOMIC_MASS;
import static si.uom.NonSI.ELECTRON_MASS;
import static si.uom.NonSI.FARADAY;
import static si.uom.NonSI.FRANKLIN;
import static si.uom.NonSI.STANDARD_GRAVITY;
import static si.uom.NonSI.GAL;
import static si.uom.NonSI.GILBERT;
import static si.uom.NonSI.ERG;
import static si.uom.NonSI.STILB;
import static si.uom.NonSI.LAMBERT;
import static si.uom.NonSI.PHOT;
import static si.uom.NonSI.MAXWELL;
import static si.uom.NonSI.GAUSS;
import static si.uom.NonSI.OERSTED;
import static si.uom.NonSI.DYNE;
import static si.uom.NonSI.KILOGRAM_FORCE;
import static si.uom.NonSI.MILLIMETRE_OF_MERCURY;
import static si.uom.NonSI.INCH_OF_MERCURY;
import static si.uom.NonSI.RAD;
import static si.uom.NonSI.REM;
import static si.uom.NonSI.CURIE;
import static si.uom.NonSI.POISE;
import static si.uom.NonSI.STOKES;
import static si.uom.NonSI.ROENTGEN;
import static si.uom.NonSI.BEL;
import static si.uom.NonSI.NEPER;

public class UomUnits {

    public static Object getUnitByName(String name) {
        return switch(name) {
            case "AMPERE" -> AMPERE;
            case "CANDELA" -> CANDELA;
            case "KELVIN" -> KELVIN;
            case "KILOGRAM" -> KILOGRAM;
            case "METRE" -> METRE;
            case "MOLE" -> MOLE;
            case "SECOND" -> SECOND;
            case "GRAM" -> GRAM;
            case "RADIAN" -> RADIAN;
            case "STERADIAN" -> STERADIAN;
            case "HERTZ" -> HERTZ;
            case "NEWTON" -> NEWTON;
            case "PASCAL" -> PASCAL;
            case "JOULE" -> JOULE;
            case "WATT" -> WATT;
            case "COULOMB" -> COULOMB;
            case "VOLT" -> VOLT;
            case "FARAD" -> FARAD;
            case "OHM" -> OHM;
            case "SIEMENS" -> SIEMENS;
            case "WEBER" -> WEBER;
            case "TESLA" -> TESLA;
            case "HENRY" -> HENRY;
            case "CELSIUS" -> CELSIUS;
            case "LUMEN" -> LUMEN;
            case "LUX" -> LUX;
            case "BECQUEREL" -> BECQUEREL;
            case "GRAY" -> GRAY;
            case "SIEVERT" -> SIEVERT;
            case "KATAL" -> KATAL;
            case "METRE_PER_SECOND" -> METRE_PER_SECOND;
            case "METRE_PER_SQUARE_SECOND" -> METRE_PER_SQUARE_SECOND;
            case "SQUARE_METRE" -> SQUARE_METRE;
            case "CUBIC_METRE" -> CUBIC_METRE;
            case "KILOMETRE_PER_HOUR" -> KILOMETRE_PER_HOUR;
            case "PERCENT" -> PERCENT;
            case "MINUTE" -> MINUTE;
            case "HOUR" -> HOUR;
            case "DAY" -> DAY;
            case "WEEK" -> WEEK;
            case "YEAR" -> YEAR;
            case "LITRE" -> LITRE;
            case "METER" -> METER;
            case "MILLIMETER" -> MILLIMETER;
            case "CENTIMETER" -> CENTIMETER;
            case "KILOMETER" -> KILOMETER;
            case "FOOT" -> FOOT;
            case "FURLONG" -> FURLONG;
            case "YARD" -> YARD;
            case "INCH" -> INCH;
            case "MILE" -> MILE;
            case "ASTRONOMICAL_UNIT" -> ASTRONOMICAL_UNIT;
            case "FATHOM" -> FATHOM;
            case "MILE_SCANDINAVIAN" -> MILE_SCANDINAVIAN;
            case "REVOLUTION_ANGLE" -> REVOLUTION_ANGLE;
            case "PI" -> PI;
            case "INCH_HG" -> INCH_HG;
            case "DEGREE_ANGLE" -> DEGREE_ANGLE;
            case "MINUTE_ANGLE" -> MINUTE_ANGLE;
            case "SECOND_ANGLE" -> SECOND_ANGLE;
            case "DEGREE" -> DEGREE;
            case "ARC_MINUTE" -> ARC_MINUTE;
            case "ARC_SECOND" -> ARC_SECOND;
            case "SQUARE_FOOT" -> SQUARE_FOOT;
            case "ARE" -> ARE;
            case "HECTARE" -> HECTARE;
            case "ACRE" -> ACRE;
            case "SQUARE_INCH" -> SQUARE_INCH;
            case "SQUARE_YARD" -> SQUARE_YARD;
            case "LITER" -> LITER;
            case "CUBIC_METER" -> CUBIC_METER;
            case "CUBIC_INCH" -> CUBIC_INCH;
            case "GALLON" -> GALLON;
            case "GALLON_IMPERIAL" -> GALLON_IMPERIAL;
            case "CUBIC_FOOT" -> CUBIC_FOOT;
            case "CUBIC_MILE" -> CUBIC_MILE;
            case "CUBIC_YARD" -> CUBIC_YARD;
            case "FLUID_OUNCE" -> FLUID_OUNCE;
            case "ACRE_FOOT" -> ACRE_FOOT;
            case "BUSHEL" -> BUSHEL;
            case "CUP" -> CUP;
            case "CUP_METRIC" -> CUP_METRIC;
            case "PINT" -> PINT;
            case "PINT_METRIC" -> PINT_METRIC;
            case "QUART" -> QUART;
            case "MINIM" -> MINIM;
            case "TEASPOON" -> TEASPOON;
            case "TABLESPOON" -> TABLESPOON;
            case "MONTH" -> MONTH;
            case "CENTURY" -> CENTURY;
            case "TONNE" -> TONNE;
            case "POUND" -> POUND;
            case "OUNCE" -> OUNCE;
            case "OUNCE_TROY" -> OUNCE_TROY;
            case "STONE" -> STONE;
            case "G_FORCE" -> G_FORCE;
            case "LIGHT_YEAR" -> LIGHT_YEAR;
            case "NAUTICAL_MILE" -> NAUTICAL_MILE;
            case "KNOT" -> KNOT;
            case "METER_PER_SECOND" -> METER_PER_SECOND;
            case "MILE_PER_HOUR" -> MILE_PER_HOUR;
            case "METER_PER_SECOND_SQUARED" -> METER_PER_SECOND_SQUARED;
            case "CARAT" -> CARAT;
            case "KARAT" -> KARAT;
            case "PARSEC" -> PARSEC;
            case "FAHRENHEIT" -> FAHRENHEIT;
            case "FOODCALORIE" -> FOODCALORIE;
            case "CALORIE" -> CALORIE;
            case "HORSEPOWER" -> HORSEPOWER;
            case "POUND_PER_SQUARE_INCH" -> POUND_PER_SQUARE_INCH;
            case "SPHERE" -> SPHERE;
            case "BIT" -> BIT;
            case "BYTE" -> BYTE;
            case "MILLIGRAM_PER_DECILITER" -> MILLIGRAM_PER_DECILITER;
            case "LITER_PER_100KILOMETERS" -> LITER_PER_100KILOMETERS;
            case "LITER_PER_KILOMETER" -> LITER_PER_KILOMETER;
            case "MILE_PER_GALLON" -> MILE_PER_GALLON;
            case "ELECTRON_VOLT" -> ELECTRON_VOLT;
            case "DALTON" -> DALTON;
            case "ATOM" -> ATOM;
            case "ANGSTROM" -> ANGSTROM;
            case "BOHR_RADIUS" -> BOHR_RADIUS;
            case "BARN" -> BARN;
            case "DAY_SIDEREAL" -> DAY_SIDEREAL;
            case "YEAR_CALENDAR" -> YEAR_CALENDAR;
            case "YEAR_SIDEREAL" -> YEAR_SIDEREAL;
            case "YEAR_JULIEN" -> YEAR_JULIEN;
            case "ATOMIC_MASS" -> ATOMIC_MASS;
            case "ELECTRON_MASS" -> ELECTRON_MASS;
            case "FARADAY" -> FARADAY;
            case "FRANKLIN" -> FRANKLIN;
            case "RANKINE" -> RANKINE;
            case "REVOLUTION" -> REVOLUTION;
            case "STANDARD_GRAVITY" -> STANDARD_GRAVITY;
            case "GAL" -> GAL;
            case "GILBERT" -> GILBERT;
            case "ERG" -> ERG;
            case "STILB" -> STILB;
            case "LAMBERT" -> LAMBERT;
            case "PHOT" -> PHOT;
            case "MAXWELL" -> MAXWELL;
            case "GAUSS" -> GAUSS;
            case "OERSTED" -> OERSTED;
            case "DYNE" -> DYNE;
            case "KILOGRAM_FORCE" -> KILOGRAM_FORCE;
            case "MILLIMETRE_OF_MERCURY" -> MILLIMETRE_OF_MERCURY;
            case "INCH_OF_MERCURY" -> INCH_OF_MERCURY;
            case "RAD" -> RAD;
            case "REM" -> REM;
            case "CURIE" -> CURIE;
            case "POISE" -> POISE;
            case "STOKES" -> STOKES;
            case "ROENTGEN" -> ROENTGEN;
            case "BEL" -> BEL;
            case "NEPER" -> NEPER;
            default -> null;
        };
    }
}
